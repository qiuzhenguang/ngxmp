server {
  listen      8099;
  server_name localhost;

  location /empty { empty; } # redirect illegal request here

  location /test {
    set $a "abc";
    set $b "123$a";
  
    write_variable $b;
  }

  location /rv2 {
    set $rv2a_key a;
    set $rv2aus rv2a;

    rv_dec $rv2a upstream=${rv2aus}us;

    set $rc 0;
    rv_get $re $rv2a $rc;

    write_variable $rc;
  }

  location /list { #{{{
          setlist $list2 " ";
          set $list2 "  a   b  c ";
          set $i 2;
          getranditem $vi $list2 $i;
          write_variable $vi;
        } #}}}

  # current time
  location /time { #{{{
          ctime $v "%Y%m%d";
          write_variable $v;
        } #}}}

  # random integer
  location /rand { #{{{
          random $k 1 5;
          write_variable $k;
        } #}}}

  location /rv_reset { #{{{
          set $rskey "a";
          remote_var $rv $rskey mc;
          set $rv ""; #
          write_variable $rv;
        } #}}}

  location /rv_incr { #{{{
          set $rskey "a";
          remote_var $rv2 $rskey mc incr;
          set $rv2 1; # increase 1
          write_variable $rv2;
        } #}}}

  location /rv_decr { #{{{
          set $rskey "a";
          remote_var $rv3 $rskey mc decr;
          set $rv3 1; 
          write_variable $rv3;
        } #}}}

  location /rv_set { #{{{
          set $rskey "a";
          remote_var $rvs $rskey mc;
          set $rvs 8075;
          # set $o $rv;
          # set $p $rv;
          write_variable $rvs;
        } #}}}

  # location /rget { #{{{
          # set $rkey "a";
          # # set $rvalue "8077";
          # get_remote_var $rkey $rvalue;
          # # set_remote_var $rkey $rvalue;
          # write_variable $rvalue;
          # } #}}}

  # location /pro { #{{{
          # if ($host ~ "(.*).l") {
            # set $xp $1;
            # remote_var $rvv $xp mc;
            # set $rmt "http://127.0.0.1:$rvv$uri";
            # proxy_pass $rmt;
            # }
          # } #}}}

  location /repl { #{{{
          ssi on;

          if ($query_string ~ "str=(.*)") {
            set $list $1;
            set $list_delimiter ",";

            set $replace_prefix "<!--# block name=\"empty\" --> error <!--# endblock -->--start--[\n";
            set $replace_suffix "]--end--";
            set $replace_pattern "<!--# include virtual=\"/key?db_%%\"  stub=\"empty\" wait=\"no\" -->";
            set $replace_delimiter "";

            set $memcached_prefix "";
          }

          repl;
        } #}}}

  location /ssi { #{{{
          ssi on;

          if ($query_string ~ "str=(.*)") {
            set $list $1;
            # write_variable $list;
            set $list_delimiter ",";

            set $replace_prefix "<!--# block name=\"empty\" --> error <!--# endblock --><<<";
            set $replace_pattern "<!--# include virtual=\"/key?%%\"  stub=\"empty\" wait=\"no\" -->";
            set $replace_delimiter "|||";
            set $replace_suffix ">>>";

          }

          repl;
        } #}}}


  set $memcached_prefix "--$query_string:";

  location /key { #{{{
          memcached_pass mc;
          memcached_connect_timeout 2000;
          memcached_send_timeout    2000;
          memcached_read_timeout    2000;
          memcached_next_upstream off;
          # memcached_buffer_size     1024; # use default

          set $memcached_prefix "--$query_string:";
          set $memcached_key $query_string;
          set $memcached_suffix "";
          default_type text/html;
          error_page 404 = /empty;
        } #}}}
}
