server {
  listen      8099;
  server_name localhost;

  location /empty { empty; } # redirect illegal request here

  location /rv2 {
    set $o "";

    # test default for all
    # name	: rv2a
    # keyname	: rv2a_key       --\
    # usname	: rv2a_us           - the same
    # hash_key	: rv2a_key       --/
    # hash	: crc32
    # default	: NULL
    rv_dec $rv2a;

    set $rv2a_key a;
    rv_get $val $rv2a $rc;
    set $o "$o\n alldefault : us=rv2a_us, key=$rv2a_key, rc=$rc, val=$val";

    set $rv2a_key b;
    rv_get $val $rv2a $rc;
    set $o "$o\n alldefault : us=rv2a_us, key=$rv2a_key, rc=$rc, val=$val";




    set $o $o\n;
    write_variable $o;
  }

  location /list { #{{{
          setlist $list2 " ";
          set $list2 "  a   b  c ";
          set $i 2;
          getranditem $vi $list2 $i;
          write_variable $vi;
        } #}}}

  # current time
  location /time { #{{{
          ctime $v "%Y%m%d";
          write_variable $v;
        } #}}}

  # random integer
  location /rand { #{{{
          random $k 1 5;
          write_variable $k;
        } #}}}

  location /rv_reset { #{{{
          set $rskey "a";
          remote_var $rv $rskey mc;
          set $rv ""; #
          write_variable $rv;
        } #}}}

  location /rv_incr { #{{{
          set $rskey "a";
          remote_var $rv2 $rskey mc incr;
          set $rv2 1; # increase 1
          write_variable $rv2;
        } #}}}

  location /rv_decr { #{{{
          set $rskey "a";
          remote_var $rv3 $rskey mc decr;
          set $rv3 1; 
          write_variable $rv3;
        } #}}}

  location /rv_set { #{{{
          set $rskey "a";
          remote_var $rvs $rskey mc;
          set $rvs 8075;
          # set $o $rv;
          # set $p $rv;
          write_variable $rvs;
        } #}}}

  # location /rget { #{{{
          # set $rkey "a";
          # # set $rvalue "8077";
          # get_remote_var $rkey $rvalue;
          # # set_remote_var $rkey $rvalue;
          # write_variable $rvalue;
          # } #}}}

  # location /pro { #{{{
          # if ($host ~ "(.*).l") {
            # set $xp $1;
            # remote_var $rvv $xp mc;
            # set $rmt "http://127.0.0.1:$rvv$uri";
            # proxy_pass $rmt;
            # }
          # } #}}}

  location /repl { #{{{
          ssi on;

          if ($query_string ~ "str=(.*)") {
            set $list $1;
            set $list_delimiter ",";

            set $replace_prefix "<!--# block name=\"empty\" --> error <!--# endblock -->--start--[\n";
            set $replace_suffix "]--end--";
            set $replace_pattern "<!--# include virtual=\"/key?db_%%\"  stub=\"empty\" wait=\"no\" -->";
            set $replace_delimiter "";

            set $memcached_prefix "";
          }

          repl;
        } #}}}

  location /ssi { #{{{
          ssi on;

          if ($query_string ~ "str=(.*)") {
            set $list $1;
            # write_variable $list;
            set $list_delimiter ",";

            set $replace_prefix "<!--# block name=\"empty\" --> error <!--# endblock --><<<";
            set $replace_pattern "<!--# include virtual=\"/key?%%\"  stub=\"empty\" wait=\"no\" -->";
            set $replace_delimiter "|||";
            set $replace_suffix ">>>";

          }

          repl;
        } #}}}


  set $emp0 "<!--# block name=\"emp\" --><!--# endblock -->{";
  set $memcached_suffix "";

  location = /test {
    ssi on;
    ssi_value_length 1024;

    set $head varname=$emp0;
    if ($query_string ~ "var=(\w*)") {
      set $head $1=$emp0;
    }
    if ($query_string ~ "uid=([\w,]*)") {
      set $bt_pv   "$1:\"<!--# include virtual=\"/key?$1\" stub=\"emp\" wait=\"yes\" -->\"";
    }
    if ($query_string ~ "aid=([\w,]*)") {
      set $ba_pv   ", $1:\"<!--# include virtual=\"/key2?$1\" stub=\"emp\" wait=\"yes\" -->\"";
    }

    set $output $head$bt_pv$ba_pv};
    write_variable $output;
  }

  location /key {
    memcached_pass mc;

    set $memcached_key $query_string;
    default_type text/html;
    error_page 404 = /empty;
  }

  location /key2 {
    memcached_pass mc2;

    set $memcached_key $query_string;
    default_type text/html;
    error_page 404 = /empty;
  }

}
